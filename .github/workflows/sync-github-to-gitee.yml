name: Sync GitHub to Gitee

on:
  workflow_dispatch:
  schedule:
    # At minute 50 past every 4th hour.
    - cron: "50 */4 * * *"

jobs:
  sync-repos:
    runs-on: windows-latest
    env:
      USER_NAME: "abgox"
      USER_EMAIL: "abgohxf@outlook.com"
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Setup SSH
        shell: pwsh
        env:
          SSH_CONFIG: ${{ secrets.SSH_CONFIG }}
          SSH_ID_RSA_GITHUB: ${{ secrets.SSH_ID_RSA_GITHUB }}
          SSH_ID_RSA_GITEE: ${{ secrets.SSH_ID_RSA_GITEE }}
        run: |
          $sshDir = "$env:UserProfile\.ssh"
          New-Item -Path $sshDir -ItemType Directory -Force

          # Write key files
          $env:SSH_CONFIG | Out-File "$sshDir\config" -Encoding utf8NoBOM -NoNewline
          $env:SSH_ID_RSA_GITHUB | Out-File "$sshDir\id_rsa_github" -Encoding utf8NoBOM -NoNewline
          $env:SSH_ID_RSA_GITEE | Out-File "$sshDir\id_rsa_gitee" -Encoding utf8NoBOM -NoNewline

          try {
              ssh-keyscan github.com gitee.com 2>$null | Out-File "$sshDir\known_hosts" -Encoding utf8NoBOM
              if (-not (Test-Path "$sshDir\known_hosts") -or (Get-Content "$sshDir\known_hosts" -Raw).Trim().Length -eq 0) {
                  throw "ssh-keyscan failed"
              }
          } catch {
              Write-Host "::error::Failed to generate known_hosts, disabling host key verification..." -ForegroundColor Red
              git config --global core.sshCommand "ssh -o StrictHostKeyChecking=no"
          }

      - name: Configure Git
        shell: pwsh
        run: |
          git config --global user.name $env:USER_NAME
          git config --global user.email $env:USER_EMAIL

      - name: Verify SSH
        shell: pwsh
        run: |
          # ssh -T git@github.com
          ssh -T git@gitee.com

      - name: Checkout
        uses: actions/checkout@v4

      - name: Sync Repos
        shell: pwsh
        run: |
          .\scripts\sync-github-to-gitee.ps1

      - name: Commit and push changes
        shell: pwsh
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -u
          git commit -m "chore: automatically update some content"
          git push

      - name: Cleanup SSH
        if: always()
        shell: pwsh
        run: |
          Remove-Item "$HOME\.ssh" -Recurse -Force -ErrorAction SilentlyContinue
